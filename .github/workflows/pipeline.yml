name: Pipeline

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  test:
    if: ${{ !startsWith(github.event.head_commit.message, 'docs') }}
    strategy:
      matrix:
        go-version: [1.17.x]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Test
      env:
        DATABASE_CONNECTION: ${{ secrets.DATABASE_CONNECTION }}
      run: go test ./...

  docker:
    needs: test
    if: ${{ startsWith(github.event.head_commit.message, 'chore(release)') || contains(github.event.head_commit.message, '[deploy]') }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to Tencent Registry
        uses: docker/login-action@v1 
        with:
          registry: hkccr.ccs.tencentyun.com
          username: ${{ secrets.TENCENT_USERNAME }}
          password: ${{ secrets.TENCENT_TOKEN }}
      -
        name: Get Previous tag
        id: previousTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            aysnine/unripe-bison:${{ steps.previousTag.outputs.tag }}
            aysnine/unripe-bison:latest
            hkccr.ccs.tencentyun.com/aysnine/unripe-bison:${{ steps.previousTag.outputs.tag }}
            hkccr.ccs.tencentyun.com/aysnine/unripe-bison:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions-hub/kubectl@v1.21.2
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy file
        run: |
          cat <<EOT3 > ./deploy.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: unripe-bison
          spec:
            progressDeadlineSeconds: 600
            replicas: 2
            revisionHistoryLimit: 10
            selector:
              matchLabels:
                k8s-app: unripe-bison
                qcloud-app: unripe-bison
            strategy:
              rollingUpdate:
                maxSurge: 1
                maxUnavailable: 0
              type: RollingUpdate
            template:
              metadata:
                labels:
                  k8s-app: unripe-bison
                  qcloud-app: unripe-bison
              spec:
                containers:
                - env:
                  - name: DATABASE_CONNECTION
                    valueFrom:
                      secretKeyRef:
                        key: unripe-bison-database
                        name: unripe-bison-database
                        optional: false
                  image: hkccr.ccs.tencentyun.com/aysnine/unripe-bison:${{ steps.previousTag.outputs.tag }}
                  imagePullPolicy: IfNotPresent
                  name: unripe-bison-server
                  resources:
                    limits:
                      cpu: 100m
                      memory: 64Mi
                    requests:
                      cpu: 10m
                      memory: 64Mi
                  securityContext:
                    privileged: false
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                dnsPolicy: ClusterFirst
                imagePullSecrets:
                - name: qcloudregistrykey
                restartPolicy: Always
                schedulerName: default-scheduler
                securityContext: {}
                terminationGracePeriodSeconds: 30
          EOT3
          cat ./deploy.yaml

      - uses: actions-hub/kubectl@v1.21.2
        with:
          args: apply -f deploy.yaml
